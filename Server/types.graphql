# projectId: cjawro3gg3v8101545anv3p3y
# version: 4

type File @model {
  contentType: String!
  createdAt: DateTime!
  id: ID! @isUnique
  name: String!
  secret: String! @isUnique
  size: Int!
  updatedAt: DateTime!
  url: String! @isUnique
}

type Implementation @model {
  id: ID! @isUnique
  project: Project! @relation(name: "ImplementationOnProject")
  student: Student! @relation(name: "StudentOnImplementation")
  urlProject: String
  urlRepo: String
  scores: [Score!]! @relation(name: "ImplementationOnScore")
  softDelete: Boolean @defaultValue(value:  false)
}

type User @model {
  id: ID! @isUnique
  isAdmin: Boolean
  name: String
  email: String! @isUnique
  password: String
  company: String
  scores: [Score!]! @relation(name: "UserOnScore")
  events: [Event!]! @relation(name: "UserOnEvent")
  juryTo: [Event!]! @relation(name: "JuryOnEvent")
  globalComments: [GlobalComment!]! @relation(name: "UserOnGlobalComment")
  softDelete: Boolean @defaultValue(value:  false)
}

type Student @model {
  id: ID! @isUnique
  name: String
  email: String
  event: Event @relation(name: "StudentOnEvent")
  implementations: [Implementation!]! @relation(name: "StudentOnImplementation")
  scores: [Score!]! @relation(name: "StudentOnScore")
  performance: Performance @relation(name: "StudentOnPerformance")
  globalComments: [GlobalComment!]! @relation(name: "StudentOnGlobalComment")
  softDelete: Boolean @defaultValue(value:  false)
}

type Project @model {
  id: ID! @isUnique
  name: String
  description: String
  weight: Weight! @relation(name: "ProjectOnWeight")
  implementations: [Implementation!]! @relation(name: "ImplementationOnProject")
  softDelete: Boolean @defaultValue(value:  false)
}

type Event @model {
  id: ID! @isUnique
  courseName: String
  academicYear: String
  examSession: String
  user: User! @relation(name: "UserOnEvent")
  jurys: [User!]! @relation(name: "JuryOnEvent")
  students: [Student!]! @relation(name: "StudentOnEvent")
  meetings: [Meeting!]! @relation(name: "EventOnMeeting")
  performances: [Performance!]! @relation(name: "EventOnPerformance")
  weights: [Weight!]! @relation(name: "EventOnWeight")
  softDelete: Boolean @defaultValue(value:  false)
}

type Meeting @model {
  id: ID! @isUnique
  # user: User! @relation(name: "UserOnMeeting")
  # student: Student! @relation(name: "StudentOnMeeting")
  event: Event! @relation(name: "EventOnMeeting")
  startTime: DateTime
  endTime: DateTime
  generalEvaluation: Float
  # scores: [Score!]! @relation(name: "MeetingOnScore")
  softDelete: Boolean @defaultValue(value:  false)
}

type Score @model {
  id: ID! @isUnique
  # meeting: Meeting! @relation(name: "MeetingOnScore")
  user: User @relation(name: "UserOnScore")
  student: Student @relation(name: "StudentOnScore")
  implementation: Implementation @relation(name: "ImplementationOnScore")
  score: Float
  comment: String
  softDelete: Boolean @defaultValue(value:  false)
}

type Performance @model {
  id: ID! @isUnique
  calculatedScore: Float
  manualScore: Float
  event: Event @relation(name: "EventOnPerformance")
  student: Student @relation(name: "StudentOnPerformance")
  softDelete: Boolean @defaultValue(value:  false)
}

type GlobalComment @model {
  id: ID! @isUnique
  user: User @relation(name: "UserOnGlobalComment")
  student: Student @relation(name: "StudentOnGlobalComment")
  globalComment: String
  softDelete: Boolean @defaultValue(value:  false)
}

type Weight @model {
  id: ID! @isUnique
  weight: Float
  project: Project @relation(name: "ProjectOnWeight")
  event: Event @relation(name: "EventOnWeight")
  softDelete: Boolean @defaultValue(value:  false)
}
